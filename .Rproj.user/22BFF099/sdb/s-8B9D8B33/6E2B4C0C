{
    "collab_server" : "",
    "contents" : "library(shinythemes)\nlibrary(shinydashboard)\n\n#https://rstudio.github.io/shinydashboard/structure.html#message-menus\n\n\nheader <- dashboardHeader(title = \"Pavadinimas\",\n                          dropdownMenuOutput('messageMenu'),\n                          dropdownMenu(type = \"notifications\",\n                                       notificationItem(\n                                         text = \"5 new users today\",\n                                         icon(\"users\")\n                                       ),\n                                       notificationItem(\n                                         text = \"12 items delivered\",\n                                         icon(\"truck\"),\n                                         status = \"success\"\n                                       ),\n                                       notificationItem(\n                                         text = \"Server load at 86%\",\n                                         icon = icon(\"exclamation-triangle\"),\n                                         status = \"warning\"\n                                       )\n                          ),\n                          dropdownMenu(type = \"tasks\", badgeStatus = \"success\",\n                                       taskItem(value = 15, color = \"green\",\n                                                \"Documentation\"\n                                       ),\n                                       taskItem(value = 17, color = \"aqua\",\n                                                \"Project X\"\n                                       ),\n                                       taskItem(value = 75, color = \"yellow\",\n                                                \"Server deployment\"\n                                       ),\n                                       taskItem(value = 10, color = \"red\",\n                                                \"Overall project\"\n                                       )\n                          )\n                          )\n\nsidebar <- dashboardSidebar(\n  sidebarMenu(\n    menuItem(\"Dashboard\", tabName = \"dashboard\", icon = icon(\"dashboard\")),\n    menuItem(\"Widgets\", \n             menuSubItem('Index1', tabName = 'widgets1'),\n             menuSubItem('Index2', tabName = 'widgets2'),\n             menuSubItem('Index3', tabName = 'widgets3'),\n             tabName = \"widgets\", icon = icon(\"th\"))\n\n  )\n)\n\nbody <- dashboardBody(\n    tags$head(\n      shiny::includeCSS(path = \"www/custom.css\")\n    ),\n  tabItems(\n    #Pirmas\n    tabItem(tabName = 'dashboard',\n            fluidPage(theme = 'custom.css',\n                      tags$head(includeScript(\"googleanalytics.js\")),\n                      navbarPage(\"2D Outlier Analysis\",tabPanel(\"App\",\n                                                                sidebarPanel(\n                                                                  selectInput('Model',label=\"Model\",choices=list(\"Hierarchical Clustering\"=12,\n                                                                                                                 \"Mahalanobis Distance\"=2,\n                                                                                                                 \"EM - can be slow to converge\"=17,\n                                                                                                                 \"Kmeans Euclidean Distance\" =1,\n                                                                                                                 \"Kmeans Means Distance\"=3,\n                                                                                                                 #\"Kmeans Minkowski\"=4,\n                                                                                                                 \"Fuzzy kmeans\"=9,\"Fuzzy kmeans - Gustafson and Kessel\"=10,\"Fuzzy k-medoids\"=13,\"Fuzzy k-means with polynomial fuzzifier\"=11,\n                                                                                                                 \"Local Outlier Factor\"=5,\n                                                                                                                 # \"SVM\"=16,\n                                                                                                                 \"RandomForest\"=6,\"Isolation Forest\"=7,\n                                                                                                                 \"FBOD\"=14,\"SOD\"=15,\n                                                                                                                 \"Autoencoder\"=8\n                                                                  ),selected = 1),\n                                                                  selectInput('sample',label=\"Sample\",choices=list(\"Random\" =1,\n                                                                                                                   \"Corners\"=2,\"Doughnut\"=3,\"Smiley\"=4,\"Spiral\"=5,\"Eyes\"=6,\"Butterfly\"=7,\"Axis-Parallel Subspace\"=8,\"StarsCYG\"=9),selected = 1),\n                                                                  numericInput('clusters', 'Cluster count/Neighbors', 3,\n                                                                               min = 1, max = 9),\n                                                                  sliderInput(\"outlierper\", \"Outlier %:\",\n                                                                              min = 85, max = 99, value = 90, step= 1),\n                                                                  actionButton(\"button\", \"Update Sample Data\"),\n                                                                  p(),\n                                                                  actionButton(\"scalebutton\", \"Scale Data\")\n                                                                ),\n                                                                mainPanel(\n                                                                  plotOutput('plot1',click = \"plot_click\",\n                                                                             brush = brushOpts(id = \"plot1_brush\")),\n                                                                  DT::dataTableOutput(\"mytable1\")\n                                                                )),\n                                 tabPanel(\"About\" ,\n                                          fluidRow(\n                                            column(10,includeMarkdown(\"docs/introduction.md\"))\n                                          )),\n                                 tabPanel(\"Tutorial\" ,\n                                          fluidRow(\n                                            column(10,includeMarkdown(\"docs/tutorial.md\"))\n                                          ))\n                                 \n                      ) )\n    ),\n    tabItem(tabName = \"widgets\",\n            h2(\"Widgets tab content\")\n    ),\n    tabItem(tabName = 'widgets1',\n            h2(\"Widgets tab content\"),\n            p('Submenu 1')\n            ),\n    tabItem(tabName = 'widgets2',\n            h2(\"Widgets tab content\"),\n            p('Submenu 2')\n    ),\n    tabItem(tabName = 'widgets3',\n            h2(\"Widgets tab content\"),\n            p('Submenu 3')\n    )\n    \n  )\n  # Boxes need to be put in a row (or column)\n  \n  )\n\n\n\ndashboardPage(header = header, sidebar = sidebar, body = body)\n\n  \n\n\n\n\n\n\n\n\n",
    "created" : 1484908340615.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2407195758",
    "id" : "6E2B4C0C",
    "lastKnownWriteTime" : 1484688329,
    "last_content_update" : 1484688329,
    "path" : "F:/git/Rshiny/testShiny/ui.r",
    "project_path" : "ui.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}